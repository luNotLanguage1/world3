(function() {
    (function (doc, win) {
    /**
     *  domready.js - Specify a function to execute when the DOM is fully loaded.
     *  Copyright (c) 2011 Blank Zheng (blankzheng@gmail.com)
     *  http://www.planabc.net
     */

        var isReady = 0,
            isBind = 0,
            fns = [],
            testEl = doc.createElement('p'),
            bindReady,
            init;

            win.domReady = function(fn){
                bindReady(fn);

                if (isReady) {
                    fn();
                } else {
                    fns.push(fn);
                }
            };

            bindReady = function (){
                if(isBind) return;
                isBind = 1;

                // Catch cases where domReady is called after the browser event has already occurred.
                // readyState: "uninitalized", "loading", "interactive", "complete", "loaded"
                if(doc.readyState === "complete") {
                    init();
                } else if (doc.addEventListener) {
                    doc.addEventListener("DOMContentLoaded", function () {
                        doc.removeEventListener("DOMContentLoaded", arguments.callee, false);
                        init();
                    }, false);
                    win.addEventListener("load", init, false);
                } else if(doc.attachEvent) {
                    // In IE, ensure firing before onload, maybe late but safe also for iframes.
                    doc.attachEvent("onreadystatechange", function() {
                        if (doc.readyState === "complete") {
                            doc.detachEvent("onreadystatechange", arguments.callee);
                            init();
                        }
                    });
                    win.attachEvent("onload", init);

                    // If IE and not a frame, continually check to see if the document is ready.
                    if(testEl.doScroll && win == win.top){
                        doScrollCheck();
                    }
                }
            };

            // Process items when the DOM is ready.
            init = function () {
                isReady = 1;

                // Make sure body exists, at least, in case IE gets a little overzealous.
                // This is taked directly from jQuery's implementation.
                if (!doc.body) {
                    setTimeout(init, 10);
                    return;
                }

                for (var i = 0, l = fns.length; i < l; i++) {
                    fns[i]();
                }
                fns = [];
            };

            function doScrollCheck() {
                if(isReady) return;

                try {
                    // If IE is used, use the trick by Diego Perini
                    // http://javascript.nwbox.com/IEContentLoaded/
                    testEl.doScroll('left');
                } catch (e) {
                    setTimeout(doScrollCheck, 10);
                    return;
                }

                init();
            }

    })(document, window);

    function parseUri (str) {
        var o   = parseUri.options,
            m   = o.parser[o.strictMode ? "strict" : "loose"].exec(str),
            uri = {},
            i   = 14;

        while (i--) uri[o.key[i]] = m[i] || "";

        uri[o.q.name] = {};
        uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {
            if ($1) uri[o.q.name][$1] = $2;
        });

        return uri;
    };

    parseUri.options = {
        strictMode: false,
        key: ["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"],
        q:   {
            name:   "queryKey",
            parser: /(?:^|&)([^&=]*)=?([^&]*)/g
        },
        parser: {
            strict: /^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/,
            loose:  /^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/
        }
    };

    function addEvent(obj, eventType, handler) {
        try {
            obj.addEventListener(eventType, handler, false);
        } catch(e) {
            obj.attachEvent("on" + eventType, handler);
        }
    }

    function parseQueryString(o) {
        var a = new Array();

        for (var k in o) {
            a.push(k + "=" + encodeURIComponent(o[k]));
        }

        return a.join("&");
    }

    function randInt() {
        return Math.floor(Math.random() * 9999999) + 1;
    }

    function setCookie(c_name, value, exdays, path) {
        var exdate = new Date();
        exdate.setDate(exdate.getDate() + exdays);
        var c_value = escape(value) + 
            ((exdays == null) ? "" : "; expires=" + exdate.toUTCString()) + 
            ((path == null) ? "" : "; path=" + path); 
        document.cookie = c_name + "=" + c_value;
    }

    function getCookieDict(){
        var dict = {};
        var cookie_list = document.cookie.split(";");
        for(var i = 0; i < cookie_list.length; i++){
            cookie_pair = cookie_list[i].split("=");
            cookie_name = cookie_pair[0].replace(/^\s+|\s+$/g, "");
            if(cookie_pair.length > 1){
                dict[cookie_name] = unescape(cookie_pair[1].replace(/^\s+|\s+$/g, ""));
            }else{
                dict[cookie_name] = "";
            }
        }
        return dict;
    }

    function getWinScreenSize(){
        return {w: window.screen.width, h: window.screen.height};
    }

    function getAbsMousePoint(ev) {
        var x = y = 0;
        var doc = document.documentElement;
        var body = document.body;
        if(!ev) ev=window.event;
        if (window.pageYoffset) {//pageYoffset是Netscape特有
            x = window.pageXOffset;
            y = window.pageYOffset;
        } else {
            x = (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);
            y = (doc && doc.scrollTop  || body && body.scrollTop  || 0) - (doc && doc.clientTop  || body && body.clientTop  || 0);
        }
        x += ev.clientX;
        y += ev.clientY;
        // 根据当前浏览器的窗口大小，对x轴进行修正
        x += (1680 - document.documentElement.clientWidth) / 2;
        return {x : x, y : y};
    }

    function getScrollTop(){
        if (document.documentElement && document.documentElement.scrollTop && document.documentElement.scrollTop > 0) {
            return document.documentElement.scrollTop;
        } else if (document.body && document.body.scrollTop && document.body.scrollTop > 0) {
            return document.body.scrollTop;
        } else if (window.pageYOffset && window.pageYOffset > 0){
            return window.pageYOffset;
        }
    }


    (function() {
        var antiInfo = {"acct_worktype": 307, "product_id": 6, "access_time": "2017-07-14 09:12:03.867373", "ad_position_id": 6, "ad_type": 1, "sign": "PXyPwMQpjIsj66N3mjM6u/1jKQw=", "ad_type_id": 0, "sn": "1014-jy", "client_id": 745, "unique_player_id": "8efe4b5a0504d4f8107d76025ba9d05d", "stuff_id": 261};
        var acctWork = {32: {'acct_worktype': 307, 'product_id': 4}, 33: {'acct_worktype': 310, 'product_id': 6}, 34: {'acct_worktype': 96, 'product_id': 8}, 6: {'acct_worktype': 301, 'product_id': 3}, 7: {'acct_worktype': 302, 'product_id': 3}, 8: {'acct_worktype': 303, 'product_id': 4}, 10: {'acct_worktype': 306, 'product_id': 6}, 11: {'acct_worktype': 302, 'product_id': 4}, 13: {'acct_worktype': 99, 'product_id': 8}, 18: {'acct_worktype': 302, 'product_id': 12}, 22: {'acct_worktype': 97, 'product_id': 8}, 24: {'acct_worktype': 301, 'product_id': 13}, 25: {'acct_worktype': 305, 'product_id': 4}, 26: {'acct_worktype': 308, 'product_id': 6}, 28: {'acct_worktype': 306, 'product_id': 4}};
        if (antiInfo && antiInfo.sn) {
            if (antiInfo.worktype && (antiInfo.worktype in acctWork)) {
                // for user
                setCookie("netease_union_product_id", acctWork[antiInfo.worktype].product_id, 1, "/");
                setCookie("netease_union_worktype", acctWork[antiInfo.worktype].acct_worktype, 1, "/");
                setCookie("netease_union_stuff_id", 0, 1, "/");
            } else if (antiInfo.acct_worktype && antiInfo.product_id) {
                // for client
                setCookie("netease_union_product_id", antiInfo.product_id, 1, "/");
                setCookie("netease_union_worktype", antiInfo.acct_worktype, 1, "/");
                setCookie("netease_union_stuff_id", antiInfo.stuff_id, 1, "/");
                setCookie("netease_union_client_id", antiInfo.client_id, 1, "/");
                setCookie("netease_union_ad_type", antiInfo.ad_type, 1, "/");
                setCookie("netease_union_ad_position_id", antiInfo.ad_position_id, 1, "/");
                setCookie("netease_union_ad_type_id", antiInfo.ad_type_id, 1, "/");
            }
            setCookie("netease_union_sn", antiInfo.sn, 1, "/");
            setCookie("netease_union_access_time", antiInfo.access_time, 1, "/");
            setCookie("netease_union_unique_player_id", antiInfo.unique_player_id, 1, "/");
            setCookie("netease_union_sign", antiInfo.sign, 1, "/");
        }

        var cookie_dict = getCookieDict();

        window.netease_union_client_detail_track = function(){
            /* 如果没有client的cookie，默认为空 */
        };

        if(typeof(cookie_dict["netease_union_client_id"]) != "undefined"){
            // for client
            var product_id = cookie_dict["netease_union_product_id"];
            var acct_worktype = cookie_dict["netease_union_worktype"];
            var client_id = cookie_dict["netease_union_client_id"];
            var sn = cookie_dict["netease_union_sn"];
            var access_time = cookie_dict["netease_union_access_time"];
            var unique_player_id = cookie_dict["netease_union_unique_player_id"];
            var stuff_id = cookie_dict["netease_union_stuff_id"];
            var ad_type = cookie_dict["netease_union_ad_type"];
            var sign = cookie_dict["netease_union_sign"];
            var referrer = document.referrer || "";
            var win_screen_size = getWinScreenSize();

            //for ad position analysis
            var ad_position_id = cookie_dict["netease_union_ad_position_id"];
            var ad_type_id = cookie_dict["netease_union_ad_type_id"];

            addEvent(window, "load", function(){
                var qs = {
                    product_id: product_id,
                    acct_worktype: acct_worktype,
                    client_id: client_id,
                    sn: sn,
                    access_time: access_time,
                    unique_player_id: unique_player_id,
                    stuff_id: stuff_id,
                    ad_type: ad_type,
                    sign: sign,
                    screen_w: win_screen_size.w,
                    screen_h: win_screen_size.h,
                    referrer: referrer,
                    ad_position_id: ad_position_id,
                    ad_type_id: ad_type_id
                };
                (new Image()).src = "//union.netease.com/gs2/union/client/anti/log/onload?" + parseQueryString(qs);
            });

            var mouse_track = [];
            var mouse_move_delta = 10;
            var mouse_track_num = 10;
            addEvent(document, "mousemove", function(e){
                //var x = e.clientX;
                //var y = e.clientY;
                var p = getAbsMousePoint(e);
                var x = p.x;
                var y = p.y;
                if(mouse_track.length == 0 ||
                    Math.abs(x - mouse_track[mouse_track.length - 1].x) > mouse_move_delta ||
                    Math.abs(y - mouse_track[mouse_track.length - 1].y) > mouse_move_delta){
                    mouse_track.push({x: x, y: y});
                    if(mouse_track.length > mouse_track_num){
                        mouse_track.shift();
                    }
                }
            });

            var click_track = [];
            var click_track_num = 50;
            addEvent(document, "click", function(e){
                //click_track.push({x: e.clientX, y: e.clientY});
                click_track.push(getAbsMousePoint(e));
                if(click_track.length > click_track_num){
                    click_track.shift();
                }
            });

            var scroll_top = 0;
            addEvent(window, "scroll", function(e){
                var st = getScrollTop();
                if(st > scroll_top){
                    scroll_top = st;
                }
            });

            var mousescroll = 0;
            if(navigator.userAgent.indexOf("MSIE") > 0 ||
                navigator.userAgent.indexOf("Chrome") > 0){
                // IE, Chrome
                addEvent(document, "mousewheel", function(e){
                    mousescroll = 1;
                });
            } else if (navigator.userAgent.indexOf("Firefox") > 0){
                // Firefox
                addEvent(document, "DOMMouseScroll", function(e){
                    mousescroll = 1;
                });
            }


            addEvent(window, "beforeunload", function(){
                var qs = {
                    product_id: product_id,
                    acct_worktype: acct_worktype,
                    client_id: client_id,
                    sn: sn,
                    access_time: access_time,
                    unique_player_id: unique_player_id,
                    stuff_id: stuff_id,
                    ad_type: ad_type,
                    sign: sign,
                    screen_w: win_screen_size.w,
                    screen_h: win_screen_size.h,
                    referrer: referrer,
                    mousescroll: mousescroll,
                    scroll_top: scroll_top
                };

                var mt = "";
                for(var i = 0; i < mouse_track.length; i++){
                    mt += mouse_track[i].x + "," + mouse_track[i].y;
                    if(i != mouse_track.length - 1){
                        mt += "|";
                    }
                }
                qs["mouse_track"] = mt;

                var ct = "";
                for(var i = 0; i < click_track.length; i++){
                    ct += click_track[i].x + "," + click_track[i].y;
                    if(i != click_track.length - 1){
                        ct += "|";
                    }
                }
                qs["click_track"] = ct;
                (new Image()).src = "//union.netease.com/gs2/union/client/anti/log/beforeunload?" + parseQueryString(qs);
                return null;
            });

            function netease_union_client_detail_track(point){
                var qs = {
                    product_id: product_id,
                    acct_worktype: acct_worktype,
                    client_id: client_id,
                    sn: sn,
                    access_time: access_time,
                    unique_player_id: unique_player_id,
                    stuff_id: stuff_id,
                    ad_type: ad_type,
                    sign: sign,
                    screen_w: win_screen_size.w,
                    screen_h: win_screen_size.h,
                    referrer: referrer,
                    point: point,
                    t: randInt()
                };
                (new Image()).src = "//union.netease.com/gs2/union/client/anti/log/detail_track?" + parseQueryString(qs);
            }

            window.netease_union_client_detail_track = netease_union_client_detail_track;

            domReady(function(){
                var allAnchors= document.getElementsByTagName("a");
                for (var i=0; i < allAnchors.length; i++) {
                    var href = allAnchors[i].href;
                    if (href.split("#")[0] == window.location.href.split("#")[0]) continue;

                    var p = parseUri(href);
                    var qs = {
                        product_id: product_id,
                        acct_worktype: acct_worktype,
                        client_id: client_id,
                        sn: sn,
                        access_time: access_time,
                        unique_player_id: unique_player_id,
                        stuff_id: stuff_id,
                        ad_type: ad_type,
                        sign: sign,
                        screen_w: win_screen_size.w,
                        screen_h: win_screen_size.h,
                        referrer: referrer,
                        dest_url: href
                    };
                    if (p.protocol == "http" || p.protocol == "https") {
                        allAnchors[i].href = "//union.netease.com/gs2/union/client/anti/log/export/?" + parseQueryString(qs);
                    }
                }
            });
        }


    })();
})();
